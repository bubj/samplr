% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psamplr.R
\name{psamplr}
\alias{psamplr}
\title{Single and Two Variable Probability Function}
\usage{
psamplr(f, q, g = NULL)
}
\arguments{
\item{f}{The pdf you wish to use to find the probability of. For 2D probability density functions, the argument must be a vector of the two parameters of the pdf.}

\item{q}{The value you want the samples to be less than. For 2D, the value you want your function g to be less than.}

\item{g}{The function of random variables x and y for 2D that you wish to find the probability associated with.}
}
\value{
A number between 0 and 1 associated with the distribution function.
}
\description{
This function implements one and two variable rejection sampling to find probabilities.
}
\details{
This function is in an implimentation of a distribution function for single and two variable pdfs using the \code{samplr} rejection sampler.

For one dimensional variables, this function uses \code{samplr} to find \code{P(X < q)}.

For two dimensional random variables, this function uses \code{samplr} to find \code{P(g(X,Y) < q)}, where \code{X} and \code{Y} are found using \code{samplr(f, 10000, twod = TRUE)}.
}
\examples{

One dimensional

f <- function(x) {
  ifelse(0 < x & x < 1, 2*x, 0)
}
psamplr(f,.5)

f <- function(x) {
  ifelse(0 < x & x < 2, 1/2*x, 0)
}
psamplr(f,1)

f <- function(x) {
  ifelse(0 < x & x < 6.2832, 1/2/pi*(sin(x) + 1), 0)
}
psamplr(f,pi)

Two dimensional

f <- function(z) {
  x <- z[1]
  y <- z[2]
  ifelse(0 <= x & x <= 1 & 0 <= y & y <= 1, x + y, 0)
}
g <- function(z) {
  x <- z[1]
  y <- z[2]
  2*x + y
}
psamplr(f,1,f)
psamplr(f,2,g)

}
